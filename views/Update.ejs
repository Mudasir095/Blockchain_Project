<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/css/homestyle.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/web3/dist/web3.min.js"></script>
    <style>
        .form-label
        {
            color: white;
        }
        video {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: -1;
}
    </style>
</head>
<body>
    <video autoplay loop muted>
		<source src="/css/blockchain_video2.mp4" type="video/mp4">
		Your browser does not support HTML5 video.
	  </video>
    <div class="sidebar">
        <a  href="home_page">Home</a>
        <a href="Add_product">Add Products</a>
        <a class="active" href="Update">UpdateDetails</a>
        <a href="displaytranscations">Show Details</a>
        <a href="logout">Logout</a>
      </div>
      <div class="topnav">
        <a href="#FakeProduct">Update Details</a>
      </div>

      <div class="formstyl" style="display:flex;justify-content: center;align-items: center;margin-top: 50px;">
        <form id="addNameForm" style="width: 400px;text-align: center;" >
          <div class="mb-3">
            <label for="pid" class="form-label">Product id</label>
            <input type="text" class="form-control" id="pid" aria-describedby="emailHelp">
            
          </div>
          <div class="mb-3">
            <label for="pname" class="form-label">Product Name</label>
            <input type="text" class="form-control" id="pname" name="pname">
          </div>
          
            <div class="mb-3">
              <label for="source" class="form-label">Source</label>
              <input type="text" class="form-control" id="source" name="source">
            </div>
            <div class="mb-3">
              <label for="destination" class="form-label">Destination</label>
              <input type="text" class="form-control" id="destination" name="destination">
            </div>
            <div class="mb-3">
              <label for="remark" class="form-label">Remark</label>
              <input type="text" class="form-control" id="remark" name="remark">
            </div>
          
          <button type="submit" class="btn btn-primary">Update Details</button>
        </form>
        </div>
        <br>
        <div id="qrcode" style="display: flex;justify-content: center;text-align: center;"></div>

    </body>

        <script>
            // const web3 = new Web3("http://localhost:7545");
            const web3 = new Web3(window.ethereum);
            const abi =[
            {
                "inputs": [
                    {
                        "internalType": "uint256",
                        "name": "_id",
                        "type": "uint256"
                    },
                    {
                        "internalType": "string",
                        "name": "_name",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "_source",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "_destination",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "_remark",
                        "type": "string"
                    }
                ],
                "name": "add",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "uint256",
                        "name": "_id",
                        "type": "uint256"
                    },
                    {
                        "internalType": "string",
                        "name": "_name",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "_source",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "_destination",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "_remark",
                        "type": "string"
                    }
                ],
                "name": "update",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "name": "myStructs",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "id",
                        "type": "uint256"
                    },
                    {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "source",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "destination",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "remark",
                        "type": "string"
                    },
                    {
                        "internalType": "uint256",
                        "name": "currentBlockTime",
                        "type": "uint256"
                    },
                    {
                        "internalType": "address",
                        "name": "account",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "uint256",
                        "name": "_id",
                        "type": "uint256"
                    }
                ],
                "name": "show",
                "outputs": [
                    {
                        "components": [
                            {
                                "internalType": "uint256",
                                "name": "id",
                                "type": "uint256"
                            },
                            {
                                "internalType": "string",
                                "name": "name",
                                "type": "string"
                            },
                            {
                                "internalType": "string",
                                "name": "source",
                                "type": "string"
                            },
                            {
                                "internalType": "string",
                                "name": "destination",
                                "type": "string"
                            },
                            {
                                "internalType": "string",
                                "name": "remark",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "currentBlockTime",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "account",
                                "type": "address"
                            }
                        ],
                        "internalType": "struct Product.MyStruct[]",
                        "name": "",
                        "type": "tuple[]"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            }
        ];
        // Set the default account address
        
            const address = '0x64Abc753FAe0Ed1c522818150c2A827E94FB17aD';
            const myContract = new web3.eth.Contract(abi, address);
        
            const addNameForm = document.getElementById('addNameForm');
            addNameForm.addEventListener('submit', async (event) => {
                event.preventDefault();
                const productid=document.getElementById('pid');
                const nameInput = document.getElementById('pname');
                const source=document.getElementById('source');
                const destination=document.getElementById('destination');
                const remark=document.getElementById('remark');
                const pid=productid.value;
                const name = nameInput.value;
                const psource=source.value;
                const pdest=destination.value;
                const premark=remark.value;
            
                
                try {
                    await window.ethereum.enable();
                    const accounts = await web3.eth.getAccounts();
                    const gasPrice = await web3.eth.getGasPrice();
                    const gasLimit = 400000;
                    const result = await myContract.methods.add(pid,name,psource,pdest,premark).send({
                        from:accounts[0],
                        gas: gasLimit,
                        gasPrice: gasPrice
                    });
                    console.log('Transaction receipt:', result);
                    alert('Transaction added to blockchain sucessfully!');

                    var url = "https://chart.googleapis.com/chart?cht=qr&chs=200x200&chl=" +
			        pid;

			        var ifr = `<iframe src="${url}" height="200" width="200"></iframe>`;

			        document.getElementById('qrcode').innerHTML = ifr;
                } catch (error) {
                    console.error('Transaction error:', error);
                    alert('Error adding name: ' + error.message);
                }
            });
        </script>

</html>